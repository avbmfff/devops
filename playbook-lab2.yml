---
- name: Install Docker
  hosts: app
  become: true
  roles:
    - docker

- name: Deploy Django application on hosts
  hosts: app
  become: true
  tasks:
    - name: Install Python 3, pip, and required packages
      apt:
        name:
          - python3
          - python3-pip
          - python3-dev
          - python3-venv
        state: present
        update_cache: yes

    - name: Check if repository exists
      stat:
        path: /home/vagrant/django-locallibrary-tutorial
      register: repo_stat

    - name: Clone repository (if not already cloned)
      git:
        repo: 'https://github.com/mdn/django-locallibrary-tutorial.git'
        dest: /home/vagrant/django-locallibrary-tutorial
        version: main
        force: yes
      when: not repo_stat.stat.exists

    - name: Check if virtual environment exists
      stat:
        path: /home/vagrant/.virtualenvs/django
      register: venv_stat

    - name: Create virtual environment (if not exists)
      command: python3 -m venv /home/vagrant/.virtualenvs/django
      when: not venv_stat.stat.exists

    - name: Install dependencies from requirements.txt
      pip:
        requirements: /home/vagrant/django-locallibrary-tutorial/requirements.txt
        virtualenv: /home/vagrant/.virtualenvs/django

    - name: Apply Django migrations
      command: /home/vagrant/.virtualenvs/django/bin/python3 manage.py migrate
      args:
        chdir: /home/vagrant/django-locallibrary-tutorial

    - name: Collect static files
      command: /home/vagrant/.virtualenvs/django/bin/python3 manage.py collectstatic --noinput
      args:
        chdir: /home/vagrant/django-locallibrary-tutorial

    - name: Create superuser (if necessary)
      command: /home/vagrant/.virtualenvs/django/bin/python3 manage.py createsuperuser --noinput --username admin --email admin@example.com
      args:
        chdir: /home/vagrant/django-locallibrary-tutorial
      ignore_errors: true

    - name: Start Django server
      command: /home/vagrant/.virtualenvs/django/bin/python3 manage.py runserver 0.0.0.0:8080
      args:
        chdir: /home/vagrant/django-locallibrary-tutorial
      async: 60
      poll: 0

    - name: Wait 10 seconds after starting Django server
      pause:
        seconds: 10

    - name: Check if server is listening on port 8080
      shell: ss -tuln | grep 8080
      register: ss_output
      failed_when: ss_output.stdout == ""
      changed_when: false
